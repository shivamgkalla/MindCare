"""Set created_at non-nullable with default

Revision ID: ecff44552dd2
Revises: 3a185cf4c3f3
Create Date: 2025-08-29 13:22:07.474186

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ecff44552dd2'
down_revision: Union[str, None] = '3a185cf4c3f3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Backfill NULLs with current timestamp
    op.execute("UPDATE bookings SET created_at = NOW() WHERE created_at IS NULL")

    op.alter_column('bookings', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False, 
               server_default=sa.func.now())

    # Enforce unique slot booking if that's the rule
    op.create_unique_constraint('uq_booking_slot', 'bookings', ['slot_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_booking_slot', 'bookings', type_='unique')
    op.alter_column('bookings', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               server_default=None)
    # ### end Alembic commands ###
